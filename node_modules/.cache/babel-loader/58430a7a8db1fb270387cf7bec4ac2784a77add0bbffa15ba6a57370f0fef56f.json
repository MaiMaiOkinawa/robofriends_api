{"ast":null,"code":"var _jsxFileName = \"/Users/maimac/Desktop/robofriends_api/src/App.js\";\nimport React, { Component } from \"react\";\nimport CardList from \"./CardList\";\nimport SearchBox from \"./SearchBox\";\nimport { robots } from \"./robots\";\n\n// Create a STATE\n// When you use STATE you want to use 'class'\n// 'Smart Component'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  //Add STATE\n  constructor() {\n    super();\n    // Everytime we get inputs in searchBox, we want to display the event\n    this.onSearchChange = event => {\n      //Filtered searchfield. To change the STATE, use 'setState'\n      this.setState({\n        searchfield: event.target.value\n      });\n    };\n    this.state = {\n      robots: [],\n      searchfield: \"\"\n    };\n    console.log(\"1\");\n  }\n  componentDidCatch() {\n    this.state({\n      robots: robots\n    });\n    console.log(\"2\");\n  }\n  render() {\n    const filteredRobots = this.state.robots.filter(robot => {\n      return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n    });\n    console.log(\"3\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tc\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"f1\",\n        children: \"RoboFriends\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n        searchChange: this.onSearchChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardList, {\n        robots: filteredRobots\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","CardList","SearchBox","robots","jsxDEV","_jsxDEV","App","constructor","onSearchChange","event","setState","searchfield","target","value","state","console","log","componentDidCatch","render","filteredRobots","filter","robot","name","toLowerCase","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","searchChange"],"sources":["/Users/maimac/Desktop/robofriends_api/src/App.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport CardList from \"./CardList\";\nimport SearchBox from \"./SearchBox\";\nimport { robots } from \"./robots\";\n\n// Create a STATE\n// When you use STATE you want to use 'class'\n// 'Smart Component'\nclass App extends Component {\n  //Add STATE\n  constructor() {\n    super();\n    this.state = {\n      robots: [],\n      searchfield: \"\",\n    };\n    console.log(\"1\");\n  }\n\n  componentDidCatch() {\n    this.state({ robots: robots });\n    console.log(\"2\");\n  }\n\n  // Everytime we get inputs in searchBox, we want to display the event\n  onSearchChange = (event) => {\n    //Filtered searchfield. To change the STATE, use 'setState'\n    this.setState({ searchfield: event.target.value });\n  };\n\n  render() {\n    const filteredRobots = this.state.robots.filter((robot) => {\n      return robot.name\n        .toLowerCase()\n        .includes(this.state.searchfield.toLowerCase());\n    });\n    console.log(\"3\");\n    return (\n      <div className=\"tc\">\n        <h1 className=\"f1\">RoboFriends</h1>\n        {/*\n            SearchBox and CardList need to communicate in order to complete the searchBox\n            We need to use \"STATE\" \n            Parent is STATE & Child component is PROPS\n            */}\n        <SearchBox searchChange={this.onSearchChange} />\n        <CardList robots={filteredRobots} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,MAAM,QAAQ,UAAU;;AAEjC;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,GAAG,SAASN,SAAS,CAAC;EAC1B;EACAO,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,CAAC;IAaT;IAAA,KACAC,cAAc,GAAIC,KAAK,IAAK;MAC1B;MACA,IAAI,CAACC,QAAQ,CAAC;QAAEC,WAAW,EAAEF,KAAK,CAACG,MAAM,CAACC;MAAM,CAAC,CAAC;IACpD,CAAC;IAhBC,IAAI,CAACC,KAAK,GAAG;MACXX,MAAM,EAAE,EAAE;MACVQ,WAAW,EAAE;IACf,CAAC;IACDI,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;EAClB;EAEAC,iBAAiBA,CAAA,EAAG;IAClB,IAAI,CAACH,KAAK,CAAC;MAAEX,MAAM,EAAEA;IAAO,CAAC,CAAC;IAC9BY,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;EAClB;EAQAE,MAAMA,CAAA,EAAG;IACP,MAAMC,cAAc,GAAG,IAAI,CAACL,KAAK,CAACX,MAAM,CAACiB,MAAM,CAAEC,KAAK,IAAK;MACzD,OAAOA,KAAK,CAACC,IAAI,CACdC,WAAW,CAAC,CAAC,CACbC,QAAQ,CAAC,IAAI,CAACV,KAAK,CAACH,WAAW,CAACY,WAAW,CAAC,CAAC,CAAC;IACnD,CAAC,CAAC;IACFR,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;IAChB,oBACEX,OAAA;MAAKoB,SAAS,EAAC,IAAI;MAAAC,QAAA,gBACjBrB,OAAA;QAAIoB,SAAS,EAAC,IAAI;QAAAC,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAMnCzB,OAAA,CAACH,SAAS;QAAC6B,YAAY,EAAE,IAAI,CAACvB;MAAe;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChDzB,OAAA,CAACJ,QAAQ;QAACE,MAAM,EAAEgB;MAAe;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC;EAEV;AACF;AAEA,eAAexB,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}